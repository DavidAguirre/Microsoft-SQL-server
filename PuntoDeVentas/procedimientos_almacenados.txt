PROCEDIMIENTO ALMACENADO FORMAPAGO
..................................................
CREATE PROCEDURE P_GRABARFORMAPAGO
@ID INT,
@NOMBRE VARCHAR(100),
@ACTIVO BIT
AS
BEGIN TRY
	IF @ID = 0
	BEGIN
		INSERT INTO FORMAPAGO (FOR_NOMBRE, FOR_HABILITADO)
					VALUES (@NOMBRE, @ACTIVO);
		-- DEVUELVE EL ID GENERADO A PARTIR DEL INSERT
		SELECT SCOPE_IDENTITY() AS RESULTADO;
	END
	ELSE
	BEGIN
		UPDATE FORMAPAGO SET 
			FOR_NOMBRE = @NOMBRE,
			FOR_HABILITADO = @ACTIVO
		WHERE ID_FORMAPAGO = @ID;
		SELECT @@ROWCOUNT  AS RESULTADO; 
	END;
END TRY
BEGIN CATCH
SELECT ERROR_NUMBER()*-1 AS RESULTADO;
END CATCH


...............................................
CREATE PROCEDURE P_LISTARFORMAPAGO
@NOMBRE VARCHAR(100) = NULL,
@ACTIVO BIT = NULL
AS
	SELECT ID_FORMAPAGO AS Id,
			FOR_NOMBRE AS Nombre,
			(CASE WHEN FOR_HABILITADO = 1 THEN 'Si' ELSE 'No' END) AS Activo
	FROM FORMAPAGO
	WHERE (ISNULL(@NOMBRE, '') = ''  OR 
			(ISNULL(@NOMBRE, '') <> '' AND FOR_NOMBRE LIKE '%' + @NOMBRE + '%'))


.....................................................
CREATE PROCEDURE P_EXISTEFORMAPAGO
@ID INT = 0,
@NOMBRE VARCHAR(100) = NULL
AS
    -- CERO NO EXISTE EN LA BDD
  -- N>0 SI ESTÁ EN LA BDD
SELECT COUNT(ID_FORMAPAGO) AS RESULTADO
FROM FORMAPAGO
WHERE FOR_NOMBRE = @NOMBRE
AND ID_FORMAPAGO <> @ID;



................................


CREATE PROCEDURE P_GRABARPROVEEDOR
@ID INT,
@RUT INT,
@DIGITO CHAR,
@RAZONSOCIAL VARCHAR(100),
@NOMBRE VARCHAR(100),
@TELEFONO1 VARCHAR(100),
@TELEFONO2 VARCHAR(100),
@EMAIL VARCHAR(100),
@ACTIVO BIT
AS
BEGIN TRY
	IF @ID = 0
	BEGIN
		INSERT INTO PROVEEDOR (PRO_RUT,PRO_DIGITO,PRO_RAZONSOCIAL,PRO_NOMBRE,PRO_TELEFONO1,PRO_TELEFONO2,PRO_EMAIL, PRO_ACTIVO)
					VALUES (@RUT, @DIGITO, @RAZONSOCIAL, @NOMBRE, @TELEFONO1, @TELEFONO2, @EMAIL, @ACTIVO);
		-- DEVUELVE EL ID GENERADO A PARTIR DEL INSERT
		SELECT SCOPE_IDENTITY() AS RESULTADO;
	END
	ELSE
	BEGIN
		UPDATE PROVEEDOR SET 
                                                PRO_RUT = @RUT,
PRO_DIGITO= @DIGITO,
PRO_RAZONSOCIAL = @RAZONSOCIAL,
PRO_NOMBRE = @NOMBRE,
PRO_TELEFONO1 = @TELEFONO1,
PRO_TELEFONO2 = @TELEFONO2,
PRO_EMAIL = @EMAIL,
PRO_ACTIVO = @ACTIVO

			
		WHERE ID_PROVEEDOR = @ID;
		SELECT @@ROWCOUNT  AS RESULTADO; 
	END;
END TRY
BEGIN CATCH
SELECT ERROR_NUMBER()*-1 AS RESULTADO;
END CATCH


........................................................
ALTER PROCEDURE P_LISTARPROVEEDOR

@RUT INT= NULL,
@DIGITO CHAR(1)= NULL,
@RAZONSOCIAL VARCHAR(100) = NULL,
@NOMBRE VARCHAR(100) = NULL,
@TELEFONO1 VARCHAR(100)= NULL,
@TELEFONO2 VARCHAR(100)= NULL,
@EMAIL VARCHAR(100)= NULL,
@ACTIVO BIT = NULL
AS
	SELECT ID_PROVEEDOR AS Id,
PRO_RUT AS Rut,
PRO_DIGITO AS Digito,
PRO_RAZONSOCIAL AS RazonSocial,
			PRO_NOMBRE AS Nombre,
PRO_TELEFONO1 AS Telefono1,
PRO_TELEFONO2 AS Telefono2,
PRO_EMAIL AS Email,
			(CASE WHEN PRO_ACTIVO = 1 THEN 'Si' ELSE 'No' END) AS Activo
	FROM PROVEEDOR
	WHERE (ISNULL(@NOMBRE, '') = ''  OR 
			(ISNULL(@NOMBRE, '') <> '' AND PRO_NOMBRE LIKE '%' + @NOMBRE + '%'))


...........................................

CREATE PROCEDURE P_GRABARPRODUCTO
@ID INT,
@ID_MARCA INT,
@ID_CATEGORIA INT,
@CODIGOBARRA INT,
@NOMBRE VARCHAR(100),
@DESCRIPCION VARCHAR(100),
@PRECIOVENTA DECIMAL(10, 3),
@PRECIOCOSTO DECIMAL(10, 3),
@STOCK DECIMAL(10, 3),
@EXECTO BIT,
@HABILITADO BIT
AS
BEGIN TRY
	IF @ID = 0
	BEGIN
		INSERT INTO PRODUCTO (ID_MARCA, ID_CATEGORIA, PRO_CODIGOBARRA, PRO_NOMBRE, PRO_DESCRIPCION, PRO_PRECIOVENTA, PRO_PRECIOCOSTO, PRO_STOCK, PRO_EXECTO, PRO_HABILITADO)
					VALUES (@ID_MARCA, @ID_CATEGORIA, @CODIGOBARRA, @NOMBRE, @DESCRIPCION, @PRECIOVENTA, @PRECIOCOSTO, @STOCK, @EXECTO, @HABILITADO);
		-- DEVUELVE EL ID GENERADO A PARTIR DEL INSERT
		SELECT SCOPE_IDENTITY() AS RESULTADO;
	END
	ELSE
	BEGIN
		UPDATE PRODUCTO SET 
                                                                                                                                                                                               ID_MARCA = @ID_MARCA,
												ID_CATEGORIA = @ID_CATEGORIA,
												PRO_CODIGOBARRA = @CODIGOBARRA,
												PRO_NOMBRE = @NOMBRE,
												PRO_DESCRIPCION = @DESCRIPCION,
												PRO_PRECIOVENTA = @PRECIOVENTA,
												PRO_PRECIOCOSTO = @PRECIOCOSTO,
												PRO_STOCK = @STOCK,
PRO_EXECTO = @EXECTO,
PRO_HABILITADO = @HABILITADO

								WHERE ID_PRODUCTO = @ID;
		SELECT @@ROWCOUNT  AS RESULTADO; 
	END;
END TRY
BEGIN CATCH
SELECT ERROR_NUMBER()*-1 AS RESULTADO;
END CATCH



..................................................................

CREATE  PROCEDURE P_LISTARPRODUCTO

@MARCA  INT= NULL,
@CATEGORIA INT= NULL,
@CODIGOBARRA INT = NULL,
@NOMBRE VARCHAR(100) = NULL,
@DESCRIPCION VARCHAR(100)= NULL,
@VENTA DECIMAL (10, 3)= NULL,
@COSTO DECIMAL(10, 3)= NULL,
@STOCK DECIMAL(10, 3) = NULL,
@EXECTO BIT = NULL,
@HABILITADO BIT = NULL
AS
	SELECT ID_PRODUCTO AS Id,
ID_MARCA AS Marca,
ID_CATEGORIA AS Categoria,
PRO_CODIGOBARRA AS Codigobarra,
PRO_NOMBRE AS Nombre,
PRO_DESCRIPCION AS Descripcion,
PRO_PRECIOVENTA AS Venta,
PRO_PRECIOCOSTO AS Costo,
PRO_STOCK AS Stock,
PRO_EXECTO AS Execto,
			(CASE WHEN PRO_HABILITADO = 1 THEN 'Si' ELSE 'No' END) AS Activo
	FROM PRODUCTO
	WHERE (ISNULL(@NOMBRE, '') = ''  OR 
			(ISNULL(@NOMBRE, '') <> '' AND PRO_NOMBRE LIKE '%' + @NOMBRE + '%'))

	